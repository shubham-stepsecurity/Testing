name: Test checkout

on:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  Test:
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@f1db3319d7db49c70352da1f5d1a122f754e8c01 # int
        with:
          disable-sudo: true
          egress-policy: audit

      - name: Checkout
        id: checkout-repo1
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3.6.0
        with:
          fetch-depth: 0

      - name: Checkout
        id: checkout-repo2
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3.6.0
        with:
          repository: step-security/secure-workflows
          ref: main
          fetch-depth: 0

      # - name: Test gitleak
      #   run: | 
      #     echo "Hello, how you doing"
      #     echo "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"
          
      - name: Test gitleak(alibaba)
        run: | 
          echo "Hello, how you doing"
          echo "alibaba some_text = '1234567890abcdefghijklmnopqrqq'"
          
      - name: Test gitleak(asana)
        run: | 
          echo "Hello, how you doing"
          echo "asana1234567890abcdefghijklmnopqrstuv"
          
      - name: Test gitleak(cloudfare)
        run: | 
          echo "Hello, how you doing"
          echo "cloudflare = c2547eb745079dac9320b638f5e225cf483cc5cfdda41"
          
          
      # - name: Test gitleak
      #   run: | 
      #     echo "Hello, how you doing"
      #     echo "AKIAIMNOJVGFDXXXE4NK"

  # Test2:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Harden Runner
  #       uses: step-security/harden-runner@f1db3319d7db49c70352da1f5d1a122f754e8c01 # int
  #       with:
  #         disable-sudo: true
  #         egress-policy: audit
          
  #     - name: Checkout
  #       id: checkout-repo1
  #       uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3.6.0
  #       with:
  #         fetch-depth: 0

  #     - name: Test gitleak
  #       run: | 
  #         echo "Hello, how you doing"
  #         echo "AKIAIMNOJVGFDXXXE4II"

  #     - name: gist call
  #       run: |
  #         curl -L \
  #         -X POST \
  #         -H "Accept: application/vnd.github+json" \
  #         -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
  #         -H "X-GitHub-Api-Version: 2022-11-28" \
  #         https://api.github.com/gists \
  #         -d '{"description":"Example of a gist","public":false,"files":{"README.md":{"content":"Hello World"}}}'


      # - name: test
      #   uses: docker://ghcr.io/buildpacks/actions/registry/request-add-entry:4.0.1

      # - name: Fetch latest commit SHA
      #   id: latest-commit
      #   run: |
      #     sha=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/repos/step-security/secure-workflows/commits | jq -r '.[0].sha')
      #     echo "SHA=${{ github.sha }}$sha" >> $GITHUB_ENV

      # - name: Print sha
      #   run: echo "$commit"
      #   env:
      #     commit: ${SHA}

      # - name: Print logs
      #   run: echo ${{ toJson(steps.checkout-repo2.outputs) }}

      # - name: Print logs
      #   run: echo ${{ toJson(steps.checkout-repo1.steps) }}

